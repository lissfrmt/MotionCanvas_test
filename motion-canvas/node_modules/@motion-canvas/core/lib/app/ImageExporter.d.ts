import { CanvasOutputMimeType } from '../types';
import { Exporter } from './Exporter';
import { Logger } from './Logger';
import { RendererSettings } from './Renderer';
import { BoolMetaField, EnumMetaField, NumberMetaField, ObjectMetaField } from '../meta';
/**
 * Image sequence exporter.
 */
export declare class ImageExporter implements Exporter {
    private readonly logger;
    readonly name = "image sequence";
    private readonly frameLookup;
    private frameCounter;
    private projectName;
    private quality;
    private fileType;
    private groupByScene;
    constructor(logger: Logger);
    meta(): ObjectMetaField<{
        fileType: EnumMetaField<CanvasOutputMimeType>;
        quality: NumberMetaField;
        groupByScene: BoolMetaField;
    }>;
    configure(settings: RendererSettings): Promise<void>;
    start(): Promise<void>;
    handleFrame(canvas: HTMLCanvasElement, frame: number, sceneFrame: number, sceneName: string, signal: AbortSignal): Promise<void>;
    stop(): Promise<void>;
}
//# sourceMappingURL=ImageExporter.d.ts.map