import { MetaField } from './MetaField';
import { EnumMetaField } from './EnumMetaField';
import { ValueDispatcher } from '../events';
/**
 * Represents the exporter configuration.
 */
export class ExporterMetaField extends MetaField {
    /**
     * Triggered when the nested fields change.
     *
     * @eventProperty
     */
    get onFieldsChanged() {
        return this.fields.subscribable;
    }
    get options() {
        return this.optionFields[this.current];
    }
    get exporter() {
        return this.exporters[this.current];
    }
    constructor(name, exporters, current = 0) {
        const optionFields = exporters.map(exporter => exporter.meta());
        const exporterField = new EnumMetaField('exporter', exporters.map(exporter => ({
            value: exporter.name,
            text: exporter.name,
        })), exporters[current].name);
        super(name, {
            name: exporterField.get(),
            options: optionFields[current].get(),
        });
        this.exporters = exporters;
        this.current = current;
        this.type = Object;
        this.handleChange = () => {
            const value = this.exporterField.get();
            const index = Math.max(this.exporters.findIndex(exporter => exporter.name === value), 0);
            if (this.current !== index) {
                this.options.onChanged.unsubscribe(this.handleChange);
                this.current = index;
                this.options.onChanged.subscribe(this.handleChange, false);
                this.fields.current = [this.exporterField, this.options];
            }
            this.value.current = {
                name: this.exporterField.get(),
                options: this.options.get(),
            };
        };
        this.exporterField = exporterField;
        this.exporterField.onChanged.subscribe(this.handleChange, false);
        this.exporterField.disable(optionFields.length < 2).space();
        this.optionFields = optionFields;
        this.optionFields[current].onChanged.subscribe(this.handleChange, false);
        this.fields = new ValueDispatcher([this.exporterField, this.options]);
    }
    set(value) {
        this.exporterField.set(value.name);
        this.options.set(value.options);
    }
    serialize() {
        return {
            name: this.exporterField.serialize(),
            options: this.options.serialize(),
        };
    }
    clone() {
        return new this.constructor(this.name, this.exporters, this.current);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXhwb3J0ZXJNZXRhRmlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tZXRhL0V4cG9ydGVyTWV0YUZpbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUV0QyxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDOUMsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUUxQzs7R0FFRztBQUNILE1BQU0sT0FBTyxpQkFBa0IsU0FBUSxTQUdyQztJQUdBOzs7O09BSUc7SUFDSCxJQUFXLGVBQWU7UUFDeEIsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQztJQUNsQyxDQUFDO0lBR0QsSUFBVyxPQUFPO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVELElBQVcsUUFBUTtRQUNqQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFLRCxZQUNFLElBQVksRUFDSSxTQUFxQixFQUM3QixVQUFVLENBQUM7UUFFbkIsTUFBTSxZQUFZLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBQ2hFLE1BQU0sYUFBYSxHQUFHLElBQUksYUFBYSxDQUNyQyxVQUFVLEVBQ1YsU0FBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDekIsS0FBSyxFQUFFLFFBQVEsQ0FBQyxJQUFJO1lBQ3BCLElBQUksRUFBRSxRQUFRLENBQUMsSUFBSTtTQUNwQixDQUFDLENBQUMsRUFDSCxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUN4QixDQUFDO1FBQ0YsS0FB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